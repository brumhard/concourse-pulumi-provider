// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Concourse.Inputs
{

    public sealed class JobArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Step to execute regardless of whether the job succeeds, fails, errors, or aborts.
        /// </summary>
        [Input("ensure")]
        public Input<Inputs.StepArgs>? Ensure { get; set; }

        /// <summary>
        /// If set, specifies a maximum number of builds to run at a time. If serial or serial_groups are set, they take precedence and force this value to be 1.
        /// </summary>
        [Input("maxInFlight")]
        public Input<double>? MaxInFlight { get; set; }

        /// <summary>
        /// The name of the job. This should be short; it will show up in URLs.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Step to execute when the job aborts.
        /// </summary>
        [Input("onAbort")]
        public Input<Inputs.StepArgs>? OnAbort { get; set; }

        /// <summary>
        /// Step to execute when the job errors.
        /// </summary>
        [Input("onError")]
        public Input<Inputs.StepArgs>? OnError { get; set; }

        /// <summary>
        /// Step to execute when the job fails.
        /// </summary>
        [Input("onFailure")]
        public Input<Inputs.StepArgs>? OnFailure { get; set; }

        /// <summary>
        /// Step to execute when the job succeeds.
        /// </summary>
        [Input("onSuccess")]
        public Input<Inputs.StepArgs>? OnSuccess { get; set; }

        [Input("plan", required: true)]
        private InputList<Inputs.StepArgs>? _plan;
        public InputList<Inputs.StepArgs> Plan
        {
            get => _plan ?? (_plan = new InputList<Inputs.StepArgs>());
            set => _plan = value;
        }

        /// <summary>
        /// Default false. If set to true, the build log of this job will be viewable by unauthenticated users. Unauthenticated users will always be able to see the inputs, outputs, and build status history of a job. This is useful if you would like to expose your pipeline publicly without showing sensitive information in the build log.
        /// </summary>
        [Input("public")]
        public Input<bool>? Public { get; set; }

        /// <summary>
        /// Default false. If set to true, builds will queue up and execute one-by-one, rather than executing in parallel.
        /// </summary>
        [Input("serial")]
        public Input<bool>? Serial { get; set; }

        public JobArgs()
        {
        }
    }
}
