// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Concourse.Inputs
{

    public sealed class ResourceArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Default 1m. The interval on which to check for new versions of the resource. Acceptable interval options are defined by the time.ParseDuration function. If set to never the resource will not be automatically checked. The resource can still be checked manually via the web UI, fly, or webhooks.
        /// </summary>
        [Input("check_every")]
        public Input<string>? Check_every { get; set; }

        /// <summary>
        /// The name of the resource. This should be short and simple. This name will be referenced by build plans of jobs in the pipeline.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Default false. If set to true, the metadata for each version of the resource will be viewable by unauthenticated users (assuming the pipeline has been exposed).
        /// </summary>
        [Input("public")]
        public Input<bool>? Public { get; set; }

        [Input("source", required: true)]
        private InputMap<string>? _source;

        /// <summary>
        /// The configuration for the resource. This varies by resource type, and is a black box to Concourse; it is blindly passed to the resource at runtime.
        /// </summary>
        public InputMap<string> Source
        {
            get => _source ?? (_source = new InputMap<string>());
            set => _source = value;
        }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Default []. A list of tags to determine which workers the checks will be performed on. You'll want to specify this if the source is internal to a worker's network, for example.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The resource type implementing the resource.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// If specified, web hooks can be sent to trigger an immediate check of the resource, specifying this value as a primitive form of authentication via query params.
        /// </summary>
        [Input("webhook_token")]
        public Input<string>? Webhook_token { get; set; }

        public ResourceArgs()
        {
        }
    }
}
